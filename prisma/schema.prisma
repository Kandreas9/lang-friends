// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model Lang {
//   id            String    @default(cuid()) @id
//   name          String
//   user          UserFriends[]
// }
//
// model UserFriends {
//   id            String    @default(cuid()) @id
//   user          User      @relation(fields: [userId], references: [id])
//   userId        String
//   lang          Lang      @relation(fields: [langId], references: [id])
//   langId        String
// }

model User {
  id            String    @default(cuid()) @id
  password      String?
  email         String?   @unique
  langs         String?   
  city          String?
  userMessages  Message[]      @relation(name: "userMessages")
  userFriends   Friends[]    @relation(name: "user")
  friendUserFriends Friends[] @relation(name: "friend_users")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
}

model Message {
  id            String    @default(cuid()) @id
  user_id       String
  message       String
  side          String
  user          User      @relation(name: "userMessages", fields: [user_id], references: [id])
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

}

// model Users {
//   id                Int       @id @default(autoincrement())
//   name              String
//   createdAt         DateTime  @default(now())
//   updatedAt         DateTime  @updatedAt
//   userFriends       Friends[] @relation(name: "users")
//   friendUserFriends Friends[] @relation(name: "friend_users")
// }

model Friends {
  id        String       @default(cuid()) @id
  user_id   String
  friend_id String
  user      User    @relation(name: "user", fields: [user_id], references: [id])
  friend    User    @relation(name: "friend_users", fields: [friend_id], references: [id])
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([user_id, friend_id])
}
